https://blog.csdn.net/Acegem/article/details/127824944、


conda create -n alipha_jiankong python=3.7
conda activate alipha_jiankong
python -m pip install nuitka==1.3.3


pip freeze > requirements.txt

windows
python -m nuitka --standalone --remove-output --mingw64 --enable-plugin=pyside6  --windows-icon-from-ico="Conf\main.ico" --nofollow-imports --onefile  main.py  --disable-console 


linux
nuitka --standalone --remove-output --enable-plugin=pyside6  --linux-onefile-icon="Conf\main.ico" --nofollow-imports --include-package="dns" --disable-console --onefile  --include-data-dir="Modules=Modules" FrameScan-GUI.py





--nofollow-imports ：不编译代码中所有的import，比如keras，numpy之类的。
--mingw64 #默认为已经安装的vs2017去编译，否则就按指定的比如mingw(官方建议)
--standalone 独立环境，这是必须的(否则拷给别人无法使用)
--windows-disable-console 没有CMD控制窗口
--output-dir=out 生成exe到out文件夹下面去
--show-progress 显示编译的进度，很直观
--show-memory 显示内存的占用
--include-qt-plugins=sensible,styles 打包后PyQt的样式就不会变了
--plugin-enable=qt-plugins 需要加载的PyQt插件
--plugin-enable=tk-inter 打包tkinter模块的刚需
--plugin-enable=numpy 打包numpy,pandas,matplotlib模块的刚需
--plugin-enable=torch 打包pytorch的刚需
--plugin-enable=tensorflow 打包tensorflow的刚需
--windows-icon-from-ico=你的.ico 软件的图标
--windows-company-name=Windows下软件公司信息
--windows-product-name=Windows下软件名称
--windows-file-version=Windows下软件的信息
--windows-product-version=Windows下软件的产品信息
--windows-file-description=Windows下软件的作用描述
--windows-uac-admin=Windows下用户可以使用管理员权限来安装
--linux-onefile-icon=Linux下的图标位置
--onefile 像pyinstaller一样打包成单个exe文件
--include-package=复制比如numpy,PyQt5 这些带文件夹的叫包或者轮子
--include-module=复制比如when.py 这些以.py结尾的叫模块